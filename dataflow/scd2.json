{
	"name": "scd2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "scd2_src",
						"type": "DatasetReference"
					},
					"name": "adlssrc1"
				},
				{
					"dataset": {
						"referenceName": "src2_scd2",
						"type": "DatasetReference"
					},
					"name": "asqlsrc2"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "exists1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ID as string,",
				"          Name as string,",
				"          Contact as string,",
				"          Gmail as string,",
				"          Address as string,",
				"          Pincode as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> adlssrc1",
				"source(output(",
				"          E_ID as integer,",
				"          E_Name as string,",
				"          E_Contact as string,",
				"          E_Gmail as string,",
				"          E_Address as string,",
				"          E_Pincode as string,",
				"          E_HashKey as binary,",
				"          Modified_Date1 as timestamp,",
				"          IS_Active as binary",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> asqlsrc2",
				"adlssrc1 derive(Modified_Date = currentUTC(),",
				"          Is_Active = true(),",
				"          Hash_Code = toBinary(md5(Gmail+Contact+Address))) ~> derivedColumn1",
				"asqlsrc2 derive(is_active = 0) ~> derivedColumn2",
				"derivedColumn1, derivedColumn2 exists(hex(Hash_Code) ==hex(E_HashKey),",
				"     negate:true,",
				"     broadcast: 'auto')~> exists1"
			]
		}
	}
}